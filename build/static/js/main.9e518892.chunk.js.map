{"version":3,"sources":["components/Form.jsx","components/Circle.jsx","components/Square.jsx","components/Hline.jsx","components/Vline.jsx","components/Render.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","props","useState","value","setValue","change","val","figure","document","getElementById","color","count","parseInt","className","htmlFor","id","onChange","type","min","onClick","sniurelis","Circle","text","style","background","Square","Hline","Vline","Render","data","figuros","Array","fill","map","fig","ind","App","setVal","a","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9e518892.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n// console.log('IS FORMAS ', props.render);\r\n\r\n\r\n    const [value, setValue] = useState(['', '', 0]);\r\n\r\n    const change = val => {\r\n        const figure = document.getElementById('figura').value;\r\n        const color = document.getElementById('color').value;\r\n        const count = document.getElementById('count').value;\r\n\r\n        setValue([figure, color, parseInt(count)]);\r\n        // console.log(figure, color, count, ' STATUS ', value);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"form-content\">\r\n                <label htmlFor=\"figura\">FigÅ«ra:</label><br />\r\n                <div className=\"row\">\r\n                    <select id=\"figura\" onChange = {() => change()}>\r\n                        <option value=\"circle\">Apskritimas</option>\r\n                        <option value=\"square\">Kvadratas</option>\r\n                        <option value=\"hline\">Horizontali linija</option>\r\n                        <option value=\"vline\">Vertikali linija</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"color\">Spalva:</label><br />\r\n                    <input onChange={() => change()} id=\"color\" type=\"color\"/>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"count\">Kiekis:</label><br />\r\n                    <input onChange={() => change()} id=\"count\" type=\"number\" min=\"0\"/>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <button onClick={() => props.sniurelis(value)}>Rodyti</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Form;","function Circle({text, color}) {\r\n    return (\r\n\r\n        <div className=\"circle\" style={{\r\n            background: color,\r\n        }}>\r\n            <p>{text + 1}</p>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Circle;","function Square({text, color}) {\r\n    return (\r\n\r\n        <div className=\"square\" style={{\r\n            background: color\r\n        }}>\r\n            <p>{text + 1}</p>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Square;","function Hline({text, color}) {\r\n\r\n    return(\r\n\r\n        <div className=\"hline\" style={{\r\n            background: color\r\n        }}></div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Hline;","function Vline({text, color}) {\r\n\r\n    return(\r\n\r\n        <div className=\"vline\" style={{\r\n            background: color\r\n        }}></div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Vline;","import Circle from './Circle';\r\nimport Square from './Square';\r\nimport Hline from './Hline';\r\nimport Vline from './Vline';\r\n\r\nfunction Render(props) {\r\n    const count = props.data[2];\r\n    const color = props.data[1];\r\n    const figure = props.data[0];\r\n    // const[value, setValue] = useState(0);\r\n    // setValue(0);\r\n\r\n    const figuros = new Array(count).fill(null);\r\n    // console.log('IS RENDERIO ', props.data[2], ' masyvas ', figuros);\r\n    return(\r\n        <>\r\n            <div className=\"render-content\">\r\n            \r\n                {figuros.map((fig, ind) => {\r\n                    switch(figure) {\r\n                        case 'circle': return <Circle key={ind} color={color} text={ind}/>\r\n                        case 'square': return <Square key={ind} color={color} text={ind}/>\r\n                        case 'hline': return <Hline key={ind} color={color} text={ind}/>\r\n                        case 'vline': return <Vline key={ind} color={color} text={ind}/>\r\n                        default: return -1\r\n                    }\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Render;","import { useState } from 'react';\r\nimport Form from './components/Form';\r\nimport Render from './components/Render';\r\n\r\n\r\nfunction App() {\r\n\r\n  const[val, setVal] = useState(['', '', 0]);\r\n  // const data =[1,2,3];\r\n\r\n  const submit = (a) => {\r\n    setVal(a);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Render data={val}/>\r\n      <Form  sniurelis={submit}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}